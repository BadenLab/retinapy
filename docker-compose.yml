name: flask-postgres
version: '3.9'
services:
  web:
    environment:
      FLASK_DEBUG: True
    # For pip local install of retinapy we need context to be project root. 
    build: 
      context: ./
      dockerfile: ./snippet_viewer/Dockerfile
      args:
        USER_ID: 1000
        GROUP_ID: 1000
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./:/app
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  db:
    image: postgres:latest
    # Without specifying the user, the container will run as root, and the
    # database files will be owned by root in the volume, which is a pain.
    # I'm using the approach described in the "Arbitrary --user Notes" section.
    # This solution requires adding /etc/passwd as a read-only volume.
    # https://hub.docker.com/_/postgres
    user: 1000:1000
    environment:
      POSTGRES_PASSWORD: postgres
        # These two are optional, and refer to the initially created user and 
        # database. These only have an effect if the data directory is empty.
        # POSTGRES_USER: postgres
        # POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./snippet_viewer/db/data:/var/lib/postgresql/data
      - /etc/passwd:/etc/passwd:ro

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"

